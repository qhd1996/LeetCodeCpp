//Solution1: Basic Method
class Solution {
public:
    vector<vector<int>> generate(int numRows) {
        vector<vector<int>> triangle(numRows); 
        for (int i=0;  i<numRows; i++) triangle[i].resize(i+1); 

        for(int i=0; i<numRows; i++){
            triangle[i][0] = triangle[i][i] = 1;
        }
        
        for(int j=1; j<numRows; j++){
            for(int k=1; k<=j>>1; k++){
                triangle[j][k] = triangle[j][j-k] = triangle[j-1][k-1] + triangle[j-1][k];
            }
        }
        return triangle;
    }
};

//Solution2: Recursive
class Solution {
public:

    vector<vector<int>> generate(int numRows) {
        vector<vector<int>> triangle(numRows); 
        for(int i=0;  i<numRows; i++) triangle[i].resize(i+1); 
        for(int i=0;  i<numRows; i++)
            for(int j=0; j<=i ; j++)
                triangle[i][j]=1;
            
        for(int i=1; i<numRows; i++){
            for(int j=1; j<i; j++)
                triangle[i][j] = triangle[i-1][j-1] + triangle[i-1][j];
        }
        return triangle;
    }
        
        
};

//Solution3: Iterative
$$C_{n}^{r+1}=\frac{n!}{(r+1)!(n-r-1)!}=\frac{n!}{r!(r+1)(n-r)!/(n-r)}=C_{n}^{r}*\frac{n-r}{r+1}$$
